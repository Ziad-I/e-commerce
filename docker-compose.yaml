version: "3.8"

services:
  user-service:
    build: ./user-service
    ports:
      - "8000:8000"
    depends_on:
      mongo:
        condition: service_started
      notification-service:
        condition: service_started
    environment:
      - MONGODB_SCHEME=mongodb
      - MONGODB_HOST=mongo
      - MONGODB_PORT=27017
      - NOTIFICATION_SERVICE_GRPC_HOST=notification-service
      - NOTIFICATION_SERVICE_GRPC_PORT=50051
    env_file:
      - path: ./user-service/.env
        required: true
    networks:
      - ecom_network

  notification-service:
    build: ./notification-service
    ports:
      - "50051:50051"
    environment:
      - NOTIFICATION_SERVICE_GRPC_HOST=0.0.0.0
      - NOTIFICATION_SERVICE_GRPC_PORT=50051
    env_file:
      - path: ./notification-service/.env
        required: true
    networks:
      - ecom_network

  product-service:
    build: ./product-service
    ports:
      - "8001:8000"
      - "50052:50051"
    depends_on:
      mongo:
        condition: service_started
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - MONGODB_SCHEME=mongodb
      - MONGODB_HOST=mongo
      - MONGODB_PORT=27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_USER=guest
      - RABBITMQ_VHOST=vhost
      - PRICE_SERVICE_GRPC_HOST=product-service
      - PRICE_SERVICE_GRPC_PORT=50052
    env_file:
      - path: ./product-service/.env
        required: true
    networks:
      - ecom_network

  cart-service:
    build: ./cart-service
    ports:
      - "8002:8000"
    depends_on:
      mongo:
        condition: service_started
      product-service:
        condition: service_started
    environment:
      - MONGODB_SCHEME=mongodb
      - MONGODB_HOST=mongo
      - MONGODB_PORT=27017
      - PRICE_SERVICE_GRPC_HOST=product-service
      - PRICE_SERVICE_GRPC_PORT=50052
    env_file:
      - path: ./cart-service/.env
        required: true
    networks:
      - ecom_network

  search-service:
    build: ./search-service
    ports:
      - "8003:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - ELASTICSEARCH_USER=elastic
      - ELASTICSEARCH_PASSWORD=my_password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_USER=guest
      - RABBITMQ_VHOST=vhost
    env_file:
      - path: ./search-service/.env
        required: true
    networks:
      - ecom_network


  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ecom_network

  redis:
    image: redis:8.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecom_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:4.1-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=vhost
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - ecom_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=my_password
      - ELASTIC_USER=elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - ecom_network
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:my_password --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s



volumes:
  mongo_data:
  redis_data:
  rabbitmq_data:
  es_data:

networks:
  ecom_network:
    driver: bridge
